'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.config = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _configuration = require('../configuration');

var _configuration2 = _interopRequireDefault(_configuration);

var _endpoints = require('./endpoints');

var _endpoints2 = _interopRequireDefault(_endpoints);

var _getImage = require('./get-image');

var _getImage2 = _interopRequireDefault(_getImage);

var _parseEndpoint = require('./parse-endpoint');

var _parseEndpoint2 = _interopRequireDefault(_parseEndpoint);

var _performRequest = require('./perform-request');

var _performRequest2 = _interopRequireDefault(_performRequest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (apiKey) {
    var apiService = _configuration2.default.mashape;

    if (apiKey) {
        switch (apiKey.length) {
            case 32:
                apiService = _configuration2.default.threeScale;
                break;
            default:
                apiService = _configuration2.default.mashape;
        }
        apiService.key = apiKey;
    } else {
        (0, _keys2.default)(_configuration2.default).forEach(function (api) {
            api = _configuration2.default[api];
            apiKey = process.env[api.globalProperty] || global[api.globalProperty] || '';
            if (apiKey) {
                apiService = api;
                apiService.key = apiKey;
            }
        });
    }

    return _endpoints2.default.reduce(function (endpointObj, endpoint) {
        endpointObj[endpoint] = (0, _parseEndpoint2.default)(endpoint, apiService);
        return endpointObj;
    }, {
        image: _getImage2.default,
        scroll: function scroll(url) {
            return (0, _performRequest2.default)(url, apiService);
        }
    });
};

exports.config = _configuration2.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2pzL2luZGV4LmpzIl0sIm5hbWVzIjpbImFwaVNlcnZpY2UiLCJtYXNoYXBlIiwiYXBpS2V5IiwibGVuZ3RoIiwidGhyZWVTY2FsZSIsImtleSIsImZvckVhY2giLCJhcGkiLCJwcm9jZXNzIiwiZW52IiwiZ2xvYmFsUHJvcGVydHkiLCJnbG9iYWwiLCJyZWR1Y2UiLCJlbmRwb2ludE9iaiIsImVuZHBvaW50IiwiaW1hZ2UiLCJzY3JvbGwiLCJ1cmwiLCJjb25maWciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O2tCQU9lLGtCQUFVO0FBQ3JCLFFBQUlBLGFBQWEsd0JBQU9DLE9BQXhCOztBQUVBLFFBQUlDLE1BQUosRUFBWTtBQUNSLGdCQUFRQSxPQUFPQyxNQUFmO0FBQ0ksaUJBQUssRUFBTDtBQUNJSCw2QkFBYSx3QkFBT0ksVUFBcEI7QUFDQTtBQUNKO0FBQ0lKLDZCQUFhLHdCQUFPQyxPQUFwQjtBQUxSO0FBT0FELG1CQUFXSyxHQUFYLEdBQWlCSCxNQUFqQjtBQUNILEtBVEQsTUFTTztBQUNILHFEQUFvQkksT0FBcEIsQ0FBNEIsZUFBTztBQUMvQkMsa0JBQU0sd0JBQU9BLEdBQVAsQ0FBTjtBQUNBTCxxQkFBU00sUUFBUUMsR0FBUixDQUFZRixJQUFJRyxjQUFoQixLQUFtQ0MsT0FBT0osSUFBSUcsY0FBWCxDQUFuQyxJQUFpRSxFQUExRTtBQUNBLGdCQUFJUixNQUFKLEVBQVk7QUFDUkYsNkJBQWFPLEdBQWI7QUFDQVAsMkJBQVdLLEdBQVgsR0FBaUJILE1BQWpCO0FBQ0g7QUFDSixTQVBEO0FBUUg7O0FBRUQsV0FBTyxvQkFBVVUsTUFBVixDQUFpQixVQUFDQyxXQUFELEVBQWNDLFFBQWQsRUFBMkI7QUFDL0NELG9CQUFZQyxRQUFaLElBQXdCLDZCQUFjQSxRQUFkLEVBQXdCZCxVQUF4QixDQUF4QjtBQUNBLGVBQU9hLFdBQVA7QUFDSCxLQUhNLEVBR0o7QUFDQ0UsaUNBREQ7QUFFQ0MsZ0JBQVE7QUFBQSxtQkFBTyw4QkFBZUMsR0FBZixFQUFvQmpCLFVBQXBCLENBQVA7QUFBQTtBQUZULEtBSEksQ0FBUDtBQU9ILEM7O1FBR0drQixNIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLXByb2Nlc3MtZW52OiAwICovXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZ3VyYXRpb24nO1xuaW1wb3J0IGVuZHBvaW50cyBmcm9tICcuL2VuZHBvaW50cyc7XG5pbXBvcnQgZ2V0SW1hZ2UgZnJvbSAnLi9nZXQtaW1hZ2UnO1xuaW1wb3J0IHBhcnNlRW5kcG9pbnQgZnJvbSAnLi9wYXJzZS1lbmRwb2ludCc7XG5pbXBvcnQgcGVyZm9ybVJlcXVlc3QgZnJvbSAnLi9wZXJmb3JtLXJlcXVlc3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgdGhlIElHREIgQVBJIG9iamVjdCwgcG9wdWxhdGVkIHdpdGggbWV0aG9kcyBmb3IgYWxsIGRlZmluZWQgZW5kcG9pbnRzLlxuICogQGFyZyB7c3RyaW5nfSBbYXBpS2V5XVxuICogQHJldHVybnMge09iamVjdH1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgYXBpS2V5ID0+IHtcbiAgICBsZXQgYXBpU2VydmljZSA9IGNvbmZpZy5tYXNoYXBlO1xuXG4gICAgaWYgKGFwaUtleSkge1xuICAgICAgICBzd2l0Y2ggKGFwaUtleS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgYXBpU2VydmljZSA9IGNvbmZpZy50aHJlZVNjYWxlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBhcGlTZXJ2aWNlID0gY29uZmlnLm1hc2hhcGU7XG4gICAgICAgIH1cbiAgICAgICAgYXBpU2VydmljZS5rZXkgPSBhcGlLZXk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgT2JqZWN0LmtleXMoY29uZmlnKS5mb3JFYWNoKGFwaSA9PiB7XG4gICAgICAgICAgICBhcGkgPSBjb25maWdbYXBpXTtcbiAgICAgICAgICAgIGFwaUtleSA9IHByb2Nlc3MuZW52W2FwaS5nbG9iYWxQcm9wZXJ0eV0gfHwgZ2xvYmFsW2FwaS5nbG9iYWxQcm9wZXJ0eV0gfHwgJyc7XG4gICAgICAgICAgICBpZiAoYXBpS2V5KSB7XG4gICAgICAgICAgICAgICAgYXBpU2VydmljZSA9IGFwaTtcbiAgICAgICAgICAgICAgICBhcGlTZXJ2aWNlLmtleSA9IGFwaUtleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuZHBvaW50cy5yZWR1Y2UoKGVuZHBvaW50T2JqLCBlbmRwb2ludCkgPT4ge1xuICAgICAgICBlbmRwb2ludE9ialtlbmRwb2ludF0gPSBwYXJzZUVuZHBvaW50KGVuZHBvaW50LCBhcGlTZXJ2aWNlKTtcbiAgICAgICAgcmV0dXJuIGVuZHBvaW50T2JqO1xuICAgIH0sIHtcbiAgICAgICAgaW1hZ2U6IGdldEltYWdlLFxuICAgICAgICBzY3JvbGw6IHVybCA9PiBwZXJmb3JtUmVxdWVzdCh1cmwsIGFwaVNlcnZpY2UpXG4gICAgfSk7XG59O1xuXG5leHBvcnQge1xuICAgIGNvbmZpZ1xufTtcbiJdfQ==